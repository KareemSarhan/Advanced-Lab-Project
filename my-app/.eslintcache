[{"C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\index.js":"1","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\App.js":"2","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Login.js":"3","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Dashboard.js":"4","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Home.js":"5","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Utils\\PublicRoute.js":"6","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Utils\\Common.js":"7","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Utils\\PrivateRoute.js":"8","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\components\\navbar.jsx":"9"},{"size":167,"mtime":1609260714167,"results":"10","hashOfConfig":"11"},{"size":1524,"mtime":1609262548323,"results":"12","hashOfConfig":"11"},{"size":1736,"mtime":1609262557589,"results":"13","hashOfConfig":"11"},{"size":453,"mtime":1600002376000,"results":"14","hashOfConfig":"11"},{"size":139,"mtime":1600002376000,"results":"15","hashOfConfig":"11"},{"size":394,"mtime":1600002376000,"results":"16","hashOfConfig":"11"},{"size":698,"mtime":1600002376000,"results":"17","hashOfConfig":"11"},{"size":425,"mtime":1600002376000,"results":"18","hashOfConfig":"11"},{"size":928,"mtime":1609263595869,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"sjxukn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\index.js",[],["41","42"],"C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\App.js",["43"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Login from './Login';\nimport Dashboard from './Dashboard';\nimport Home from './Home';\nimport PrivateRoute from './Utils/PrivateRoute';\nimport PublicRoute from './Utils/PublicRoute';\nimport { getToken, removeUserSession, setUserSession } from './Utils/Common';\nimport NavBar from \"./components/navbar\";\n\nfunction App() {\n  const [authLoading, setAuthLoading] = useState(true);\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      return;\n    }\n\n    axios.get(`http://localhost:4000/verifyToken?token=${token}`).then(response => {\n      setUserSession(response.data.token, response.data.user);\n      setAuthLoading(false);\n    }).catch(error => {\n      removeUserSession();\n      setAuthLoading(false);\n    });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>\n          <div className=\"header\">\n            <NavBar/>\n             </div>\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <PublicRoute path=\"/login\" component={Login} />\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Login.js",["44"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './Utils/Common';\nimport NavBar from \"./components/navbar\";\nfunction Login(props) {\n  const [loading, setLoading] = useState(false);\n  const username = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n\n  // handle button click of login form\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    axios.post('http://localhost:4000/users/signin', { username: username.value, password: password.value }).then(response => {\n      setLoading(false);\n      setUserSession(response.data.token, response.data.user);\n      props.history.push('/dashboard');\n    }).catch(error => {\n      setLoading(false);\n      if (error.response.status === 401) setError(error.response.data.message);\n      else setError(\"Something went wrong. Please try again later.\");\n    });\n  }\n\n  return (\n    \n    <div>\n                {/* <NavBar/> */}\n      Login<br /><br />\n      <div>\n        Username<br />\n        <input type=\"text\" {...username} autoComplete=\"new-password\" />\n      </div>\n      <div style={{ marginTop: 10 }}>\n        Password<br />\n        <input type=\"password\" {...password} autoComplete=\"new-password\" />\n      </div>\n      {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n      <input type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />\n    </div>\n  );\n}\n\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\nexport default Login;","C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Dashboard.js",[],"C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Home.js",[],"C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Utils\\PublicRoute.js",[],"C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Utils\\Common.js",[],"C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\Utils\\PrivateRoute.js",[],"C:\\Repos\\Advanced-Lab-Project\\my-app\\src\\components\\navbar.jsx",["45","46","47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":40,"nodeType":"55","messageId":"56","endLine":2,"endColumn":47},{"ruleId":"53","severity":1,"message":"57","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":14},{"ruleId":"53","severity":1,"message":"58","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":18},{"ruleId":"53","severity":1,"message":"59","line":3,"column":20,"nodeType":"55","messageId":"56","endLine":3,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":18,"column":11,"nodeType":"62","endLine":18,"endColumn":48},{"ruleId":"60","severity":1,"message":"61","line":22,"column":11,"nodeType":"62","endLine":22,"endColumn":48},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'getToken' is defined but never used.","'removeUserSession' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]